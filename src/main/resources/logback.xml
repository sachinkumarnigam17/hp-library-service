<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!--property name="LOG_PATH" value="/var/log/applications/" / -->
	<property name="LOG_PATH" value="/opt/logs/application" />

	<appender name="STDOUT"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date ${HOSTNAME} [%thread] %-5level %logger{36} -
				%X{userEmail} %msg%n
			</pattern>
		</encoder>
	</appender>

	<appender name="INFO_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/hp-library-api-info.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${LOG_PATH}/hp-library-api-info-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 50MB -->
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>%date %level ${HOSTNAME} [%thread] %logger{10} [%file:%line]
				%X{userEmail} %msg%n
			</pattern>
		</encoder>
	</appender>

	<appender name="ERROR_FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/hp-library-api-error.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- daily rollover -->
			<fileNamePattern>${LOG_PATH}/hp-library-api-error-%d{yyyy-MM-dd}.%i.log
			</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- or whenever the file size reaches 50MB -->
				<maxFileSize>50MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- keep 30 days' worth of history -->
			<maxHistory>30</maxHistory>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<encoder>
			<pattern>%date %level ${HOSTNAME} [%thread] %logger{10} [%file:%line]
				%X{userEmail} %msg%n
			</pattern>
		</encoder>
	</appender>

	<root level="ERROR">
		<appender-ref ref="ERROR_FILE" />
	</root>
	<root level="INFO">
		-->
		<appender-ref ref="INFO_FILE" />
		-->
		<appender-ref ref="STDOUT" />
		-->
	</root>
	-->

</configuration>
